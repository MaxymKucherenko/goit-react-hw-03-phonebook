{"version":3,"sources":["components/Form.js","components/contactList.js","components/filter.js","components/contacts.js","App.js","reportWebVitals.js","index.js"],"names":["INITIAL_STATE","contacts","name","number","Form","state","handleInputChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","type","pattern","title","onChange","required","Component","ContactList","handleDelete","map","id","onClick","Filter","handleChange","filter","Contacts","formSubmitHandler","data","console","log","createContact","contact","uuidv4","find","toLowerCase","alert","onFilterChange","target","deleteContact","split","LocalContacts","localStorage","getItem","parsedLocalContacts","JSON","parse","preProps","prevState","setItem","stringify","filteredContacts","includes","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6787ef51.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nconst INITIAL_STATE = {\r\n  contacts: [],\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\n\r\nclass Form extends Component {\r\n  state = { ...INITIAL_STATE};\r\n\r\n  handleInputChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value, });\r\n  };\r\n  \r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ ...INITIAL_STATE});\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Имя\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            onChange={this.handleInputChange}\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Телефон\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            onChange={this.handleInputChange}\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\" /* onClick={GoodIncrement} */>Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form","import React from 'react';\r\n\r\nconst ContactList = ({ contacts, handleDelete}) => (\r\n   <ul>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id}>\r\n        {name}: {number}\r\n        <button type=\"button\" onClick={handleDelete} id={`deletebtn:${id}`}>\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n)\r\n\r\nexport default ContactList;","import React from 'react';\r\n\r\nconst Filter = ({ handleChange, filter }) => (\r\n    <>\r\n        <p>Find cotatcs by name</p>\r\n        <input type='text' onChange={handleChange} value={filter} />\r\n    </>\r\n)\r\n\r\nexport default Filter;","import React, { Component } from 'react'\r\nimport Form from './Form'\r\nimport ContactsList from './contactList'\r\nimport Filter from './filter';\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\n\r\nclass Contacts extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: \"\",\r\n  };\r\n\r\n  formSubmitHandler = (data) => {\r\n    console.log(data);\r\n  };\r\n  createContact = ({ name, number }) => {\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    const foundContact = this.state.contacts.find(\r\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\r\n    );\r\n\r\n    if (foundContact) {\r\n      alert(`${name} is already in contacts`);\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      contacts: [...this.state.contacts, contact],\r\n    });\r\n  };\r\n\r\n  onFilterChange = ({ target }) => {\r\n    this.setState({\r\n      filter: target.value,\r\n    });\r\n  };\r\n\r\n  deleteContact = ({ target }) => {\r\n    const id = target.id.split(\":\")[1];\r\n    console.log(id);\r\n    this.setState({\r\n      contacts: this.state.contacts.filter((contact) => contact.id !== id),\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    \r\n    const LocalContacts = localStorage.getItem(\"contacts\");\r\n    const parsedLocalContacts = JSON.parse(LocalContacts);\r\n    if (parsedLocalContacts) {\r\n      this.setState({ contacts: parsedLocalContacts });\r\n    }\r\n     \r\n  }\r\n\r\n  componentDidUpdate(preProps, prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n    render() {\r\n      const filteredContacts = this.state.contacts.filter((contact) =>\r\n        contact.name.toLowerCase().includes(this.state.filter.toLowerCase())\r\n      );\r\n\r\n    return (\r\n      <div>\r\n        <Form\r\n          onSubmit={this.createContact}\r\n        />\r\n        <div>\r\n          <h2>CONTACTS</h2>\r\n          <Filter\r\n            handleChange={this.onFilterChange}\r\n            filter={this.state.filter}\r\n          />\r\n          <ContactsList\r\n            contacts={filteredContacts}\r\n            handleDelete={this.deleteContact}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;","import Contacts from './components/contacts';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Phonebook</h1>\n      </header>\n      <Contacts />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}