{"version":3,"sources":["components/Form.js","components/contactList.js","components/filter.js","App.js","index.js"],"names":["INITIAL_STATE","name","number","Form","state","handleInputChange","e","currentTarget","value","setState","handleSubmit","preventDefault","onAdd","props","validateForm","id","uuidv4","reset","onCheckUnique","alert","this","onSubmit","type","pattern","title","onChange","required","Component","ContactList","contacts","handleDelete","map","onClick","Filter","handleChange","filter","App","formSubmitHandler","data","console","log","createContact","newContact","handleCheckContact","isExistContact","find","contact","toLowerCase","onFilterChange","target","deleteContact","split","getVisibleContacts","includes","LocalContacts","localStorage","getItem","parsedLocalContacts","JSON","parse","preProps","prevState","setItem","stringify","filteredContacts","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e32dbef5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst INITIAL_STATE = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nclass Form extends Component {\r\n  state = { ...INITIAL_STATE };\r\n\r\n  handleInputChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const { onAdd } = this.props;\r\n    const isValidateForm = this.validateForm();\r\n    if (!isValidateForm) return;\r\n    onAdd({ id: uuidv4(), name, number });\r\n\r\n    this.reset();\r\n  };\r\n\r\n  validateForm = () => {\r\n    const { name, number } = this.state;\r\n    const { onCheckUnique } = this.props;\r\n    if (!name || !number) {\r\n      alert(\"Some field is empty\");\r\n      return false;\r\n    }\r\n    return onCheckUnique(name);\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ ...INITIAL_STATE });\r\n  };\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Имя\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            onChange={this.handleInputChange}\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Телефон\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            onChange={this.handleInputChange}\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;","import React from \"react\";\r\n\r\nconst ContactList = ({ contacts, handleDelete }) => (\r\n  <ul>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id}>\r\n        {name}: {number}\r\n        <button type=\"button\" onClick={handleDelete} id={`deletebtn:${id}`}>\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\n\r\nconst Filter = ({ handleChange, filter }) => (\r\n  <>\r\n    <p>Find cotatcs by name</p>\r\n    <input type=\"text\" onChange={handleChange} value={filter} />\r\n  </>\r\n);\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\nimport Form from \"./components/Form\";\nimport ContactsList from \"./components/contactList\";\nimport Filter from \"./components/filter\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  formSubmitHandler = (data) => {\n    console.log(data);\n  };\n  createContact = (newContact) => {\n    this.setState(({ contacts }) => ({\n      contacts: [...this.state.contacts, newContact],\n    }));\n  };\n  handleCheckContact = (name) => {\n    const { contacts } = this.state;\n    const isExistContact = !!contacts.find(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    isExistContact && alert(`${name} is already in contacts`);\n    return !isExistContact;\n  };\n\n  onFilterChange = ({ target }) => {\n    this.setState({\n      filter: target.value,\n    });\n  };\n\n  deleteContact = ({ target }) => {\n    const id = target.id.split(\":\")[1];\n    console.log(id);\n    this.setState({\n      contacts: this.state.contacts.filter((contact) => contact.id !== id),\n    });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  componentDidMount() {\n    const LocalContacts = localStorage.getItem(\"contacts\");\n    const parsedLocalContacts = JSON.parse(LocalContacts);\n    if (parsedLocalContacts) {\n      this.setState({ contacts: parsedLocalContacts });\n    }\n  }\n\n  componentDidUpdate(preProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const filteredContacts = this.getVisibleContacts();\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Phonebook</h1>\n        </header>\n        <Form\n          onAdd={this.createContact}\n          onCheckUnique={this.handleCheckContact}\n        />\n        <div>\n          <h2>CONTACTS</h2>\n          <Filter\n            handleChange={this.onFilterChange}\n            filter={this.state.filter}\n          />\n          <ContactsList\n            contacts={filteredContacts}\n            handleDelete={this.deleteContact}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}